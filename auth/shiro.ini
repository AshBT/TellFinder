[main]

# Configure a SessionDAO and then set it:
sessionManager = org.apache.shiro.web.session.mgt.DefaultWebSessionManager
securityManager.sessionManager = $sessionManager

# use EnterpriseCacheSessionDAO to store sessions
sessionDAO = org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO
securityManager.sessionManager.sessionDAO = $sessionDAO

# use EhCache to cache sessions
cacheManager = org.apache.shiro.cache.ehcache.EhCacheManager
securityManager.cacheManager = $cacheManager

# set up auth
authc.loginUrl = /TellFinderLogin.html
authc.successUrl = /overview.html
authc.usernameParam = j_username
authc.passwordParam = j_password

logout.redirectUrl = /TellFinderLogin.html

# password matcher
credentialsMatcher = org.apache.shiro.authc.credential.HashedCredentialsMatcher
credentialsMatcher.hashIterations = 1
credentialsMatcher.hashAlgorithmName = SHA-256

# jdbc
jdbcRealm = org.apache.shiro.realm.jdbc.JdbcRealm
jdbcRealm.authenticationQuery = SELECT user_pass FROM users WHERE user_name = ?
jdbcRealm.userRolesQuery =  SELECT role_name FROM user_roles WHERE user_name = ?
jdbcRealm.credentialsMatcher = $credentialsMatcher
jdbcRealm.dataSource=$ds
securityManager.realms = $jdbcRealm

# Connection
ds = oculus.memex.shiro.EnvMysqlDataSource
ds.serverName = DATABASE_HOST
ds.user = DATABASE_USER
ds.password = DATABASE_PASSWORD
ds.databaseName = DATABASE_UNCHARTED_SCHEMA

jdbcRealm.dataSource=$ds

[urls]
/logout = logout
/health/** = authcBasic
/** = authc
